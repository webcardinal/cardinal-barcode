/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface PskBarcodeGenerator {
        "data": any;
        "includeText": boolean;
        "size"?: any;
        "title": string;
        "type": string;
    }
    interface PskBarcodeScanner {
        /**
          * The model-handler scope that will be updated with the retrieved data from the scanner.
         */
        "data": string;
        "setFrame": (src: string) => Promise<void>;
        /**
          * Decides if a screenshot is made after scanning.
         */
        "snapVideo": boolean;
        /**
          * Decides if the received frame should be cropped according with the screen aspect-ration.
         */
        "stopInternalCropping": boolean;
        "switchCamera": () => Promise<void>;
        /**
          * If <code>true</code>, setFrames can be used and custom frames will be scanned.
         */
        "useFrames": boolean;
        /**
          * Decides if internal status of component is logged into the console.
         */
        "useLogs": boolean;
        /**
          * If <code>true</code>, a Web Worker (scanner-worker.js) will be instantiated. Its purpose is to decode codes.  If <code>false</code> decoding will take place in the main thread.
         */
        "useWebWorker": boolean;
    }
}
declare global {
    interface HTMLPskBarcodeGeneratorElement extends Components.PskBarcodeGenerator, HTMLStencilElement {
    }
    var HTMLPskBarcodeGeneratorElement: {
        prototype: HTMLPskBarcodeGeneratorElement;
        new (): HTMLPskBarcodeGeneratorElement;
    };
    interface HTMLPskBarcodeScannerElement extends Components.PskBarcodeScanner, HTMLStencilElement {
    }
    var HTMLPskBarcodeScannerElement: {
        prototype: HTMLPskBarcodeScannerElement;
        new (): HTMLPskBarcodeScannerElement;
    };
    interface HTMLElementTagNameMap {
        "psk-barcode-generator": HTMLPskBarcodeGeneratorElement;
        "psk-barcode-scanner": HTMLPskBarcodeScannerElement;
    }
}
declare namespace LocalJSX {
    interface PskBarcodeGenerator {
        "data"?: any;
        "includeText"?: boolean;
        "size"?: any;
        "title"?: string;
        "type"?: string;
    }
    interface PskBarcodeScanner {
        /**
          * The model-handler scope that will be updated with the retrieved data from the scanner.
         */
        "data"?: string;
        /**
          * Decides if a screenshot is made after scanning.
         */
        "snapVideo"?: boolean;
        /**
          * Decides if the received frame should be cropped according with the screen aspect-ration.
         */
        "stopInternalCropping"?: boolean;
        /**
          * If <code>true</code>, setFrames can be used and custom frames will be scanned.
         */
        "useFrames"?: boolean;
        /**
          * Decides if internal status of component is logged into the console.
         */
        "useLogs"?: boolean;
        /**
          * If <code>true</code>, a Web Worker (scanner-worker.js) will be instantiated. Its purpose is to decode codes.  If <code>false</code> decoding will take place in the main thread.
         */
        "useWebWorker"?: boolean;
    }
    interface IntrinsicElements {
        "psk-barcode-generator": PskBarcodeGenerator;
        "psk-barcode-scanner": PskBarcodeScanner;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "psk-barcode-generator": LocalJSX.PskBarcodeGenerator & JSXBase.HTMLAttributes<HTMLPskBarcodeGeneratorElement>;
            "psk-barcode-scanner": LocalJSX.PskBarcodeScanner & JSXBase.HTMLAttributes<HTMLPskBarcodeScannerElement>;
        }
    }
}
